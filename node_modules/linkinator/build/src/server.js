"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startWebServer = void 0;
const http = require("http");
const path = require("path");
const util = require("util");
const fs = require("fs");
const marked = require("marked");
const serve = require("serve-handler");
const enableDestroy = require("server-destroy");
const readFile = util.promisify(fs.readFile);
/**
 * Spin up a local HTTP server to serve static requests from disk
 * @private
 * @returns Promise that resolves with the instance of the HTTP server
 */
async function startWebServer(options) {
    return new Promise((resolve, reject) => {
        const server = http
            .createServer(async (req, res) => {
            const pathParts = req.url.split('/').filter(x => !!x);
            if (pathParts.length > 0) {
                const ext = path.extname(pathParts[pathParts.length - 1]);
                if (options.markdown && ext.toLowerCase() === '.md') {
                    const filePath = path.join(path.resolve(options.root), req.url);
                    const data = await readFile(filePath, { encoding: 'utf-8' });
                    const result = marked(data, { gfm: true });
                    res.writeHead(200, {
                        'content-type': 'text/html',
                    });
                    res.end(result);
                    return;
                }
            }
            return serve(req, res, {
                public: options.root,
                directoryListing: options.directoryListing,
            });
        })
            .listen(options.port, () => resolve(server))
            .on('error', reject);
        enableDestroy(server);
    });
}
exports.startWebServer = startWebServer;
//# sourceMappingURL=server.js.map